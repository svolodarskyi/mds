services:
  source_postgres:
    image: postgres:15
    ports:
      - '5433:5432'
    networks:
      - elt_network
    environment:
      POSTGRES_DB: source_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
    volumes:
      - ./source_db_init/init.sql:/docker-entrypoint-initdb.d/init.sql

    #EXAMPLE: CHECKING THE HEALTH OF POSTGRESS RIGHT AWAY. 
    # healthcheck:
    #   test: ["CMD-SHELL", "-pg_isready -U postgres"]
    #   interval: 5s
    #   timeout: 5s
    #   retries: 5


  destination_postgres:
    image: postgres:15
    ports:
      - '5434:5432'
    networks:
      - elt_network
    environment:
      POSTGRES_DB: destination_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret

  elt_script:
    build:
      context: ./elt # Directory containing the Dockerfile and elt_script.py
      dockerfile: Dockerfile # Name of the Dockerfile, if it's something other than "Dockerfile", specify here
    command: ['python', 'elt_script.py']
    networks:
      - elt_network
    depends_on:
      - source_postgres
      - destination_postgres

  dbt:
    -image: ghcr.io/dbt-labs/dbt-postgres:1.47:<version_tag>
  
    
    #EXAMPLE: dependancy on healthy state of container with db - see above source_postgres - commented code
    # depends_on:
    #   postgres:
    #     condition: service_healthy

networks:
  elt_network:
    driver: bridge
